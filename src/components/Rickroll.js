/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from "react";
import { useGLTF, useFBX, useAnimations } from "@react-three/drei";
import { AnimationMixer } from "three";

export function Rickroll(props) {
    const group = useRef();
    // const { nodes, materials, animations } = useGLTF(
    //     "/rickroll_out/rickroll-transformed.glb"
    // );
    // const { nodes, materials, animations } = useFBX(
    //     "/2_cuda_2_rickroll_slice6 (1).fbx"
    // );
    // const { nodes, materials, animations } = useFBX("/rickroll.fbx");
    const fbx = useFBX("/rickroll.fbx");

    console.log(fbx);
    // console.log(materials);
    // console.log(animations);

    // fbx attempt
    // const mesh = fbx.parent.children[3];
    // let mesh = fbx.children[0];
    // if (fbx.parent !== null) {
    //     mesh = fbx.parent.children[3];
    // } else {
    //     // mesh = fbx.children[0];
    // }
    // const mixer = new AnimationMixer(mesh);

    // const action = mixer.clipAction(fbx.animations[0]);

    // mesh.tick = (delta) => mixer.update(delta);

    // action.reset().play();

    useEffect(() => {
        const mesh = fbx.parent.children[3];
        const mixer = new AnimationMixer(mesh);
        const action = mixer.clipAction(fbx.animations[0]);
        mesh.tick = (delta) => mixer.update(delta);
        console.log(fbx);

        action.play();
        // console.log(fbx);
        // console.log(fbx.animations);
        // console.log(fbx.animations[0]);
        // let animation = new AnimationAction(fbx.animations[0]);
        // console.log(animaction);
        // animation.play();
        // action.play();
        // fbx.animations[0];
        // fbx.animations[0].play();
    });
    // console.log(fbx.animations[0].play());
    return <primitive object={fbx} />;

    const { actions } = useAnimations(animations, group);

    console.log("hello");
    console.log(actions);
    let k = "2_cuda:2_rickroll_slice6.pkl";
    console.log(actions[k]);

    useEffect(() => {
        console.log(actions);
        console.log(actions["2_cuda:2_rickroll_slice6.pkl"]);
        actions["2_cuda:2_rickroll_slice6.pkl"].play();
    });

    return (
        <group ref={group} {...props} dispose={null}>
            <group name="Root_Scene">
                <group name="RootNode">
                    <primitive object={nodes.m_avg_root} />
                    <skinnedMesh
                        name="m_avg"
                        geometry={nodes.m_avg.geometry}
                        material={materials.lambert1}
                        skeleton={nodes.m_avg.skeleton}
                        morphTargetDictionary={
                            nodes.m_avg.morphTargetDictionary
                        }
                        morphTargetInfluences={
                            nodes.m_avg.morphTargetInfluences
                        }
                    />
                </group>
            </group>
        </group>
    );
}

useGLTF.preload("/rickroll-transformed.glb");
