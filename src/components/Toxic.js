/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect, useState } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";

export function createToxicComponent(path) {
    function Toxic(props) {
        let group = useRef();
        let { nodes, materials, animations } = useGLTF(props.path);

        const actions = useAnimations(animations, group);

        useEffect(() => {
            let keys = Object.keys(actions.actions);
            let k = keys[0];
            actions.actions[k].play();
        });

        return (
            <group ref={group} {...props} dispose={null}>
                <group name="Root_Scene">
                    <group name="RootNode">
                        <group name="Armature002">
                            <primitive object={nodes.mixamorigHips} />
                        </group>
                        <skinnedMesh
                            name="Alpha_Surface"
                            geometry={nodes.Alpha_Surface.geometry}
                            material={materials["Alpha_Body_MAT.007"]}
                            skeleton={nodes.Alpha_Surface.skeleton}
                        />
                        <skinnedMesh
                            name="Alpha_Joints"
                            geometry={nodes.Alpha_Joints.geometry}
                            material={materials["Alpha_Joints_MAT.007"]}
                            skeleton={nodes.Alpha_Joints.skeleton}
                        >
                            <meshPhongMaterial
                                color="#3399ff"
                                shininess={1000}
                            />
                        </skinnedMesh>
                    </group>
                </group>
            </group>
        );
    }

    return Toxic;
}

useGLTF.preload("/test_toxic2_out/test_toxic2-transformed.glb");
